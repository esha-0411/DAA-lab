#include<stdio.h>
#include<stdlib.h>
void printarray(int arr[],int left,int right){
	for(int i=left;i<=right;i++){
		printf("%d ",arr[i]);
}
printf("\n");
	}
	void merge(int arr[],int left,int mid,int right){
	int n1= mid-left+1;
	int n2 = right - mid;
	int *l = (int*)malloc(n1 * sizeof(int));
	int *r =(int*)malloc(n2 * sizeof(int));
	for(int i = 0;i<n1;i++)
		l[i]= arr[left+i];
	for(int j = 0;j<n2;j++)
		r[j]= arr[mid +1 +j];
	int i = 0,j=0,k=left;
	while(i<n1 && j<n2){
		if(l[i]<=r[j]){
			arr[k++]=l[i++];
		}else{
			arr[k++]=r[j++];
		}
	}
		while(i<n1){
			arr[k++]=l[i++];
		}
	while(j<n2){
		arr[k++] = r[j++];
	}
	printf("Pass: ");
	printarray(arr,left,right);
	free(l);
	free(r);
	}
void mergesort(int arr[],int left,int right){
	if(left<right){
		int mid = left+(right - left)/2;
		mergesort(arr,left,mid);
		mergesort(arr,mid+1,right);
		merge(arr,left,mid,right);
	}
}
int main(){
	int n;
	printf("no of elements: ");
	scanf("%d",&n);
	int * arr = (int*)malloc(n *sizeof(int));
	printf("elements: ");
	for(int i=0;i<n;i++){
		scanf("%d",&arr[i]);
	}
	printf("Given array:\n");
	printarray(arr,0,n-1);
	mergesort(arr,0,n-1);
	printf("Sorted array:\n");
	printarray(arr,0,n-1);
	free(arr);
	return 0;
}
